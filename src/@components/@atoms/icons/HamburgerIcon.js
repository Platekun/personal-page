import React from 'react';
import styled from '@emotion/styled';

import { COLORS } from '../../../@theme';

const Hamburger = styled.svg`
  path,
  ellipse {
    fill: ${props => {
      switch (props.type) {
        case 'inverted':
          return COLORS.WHITE;

        case 'normal':
          return COLORS.TEXT_PRIMARY;

        default:
          throw new Error('Unsupported type for Hamburguer Menu');
      }
    }};

    transition: ease-in 0.3s fill;
  }
`;

export function HamburgerIcon(props) {
  return (
    <Hamburger width="32" height="28" viewBox="0 0 32 28" {...props}>
      <g id="Personal-Page" fill="none" fillRule="evenodd">
        <g id="About-Mobile" transform="translate(-17 -16)" fill="#16161D">
          <g id="Burger-Menu-Default" transform="translate(16 16)">
            <g id="Burger" transform="translate(1)">
              <ellipse id="Oval" cx="8.258" cy="9" rx="1.032" ry="1" />
              <ellipse id="Oval" cx="15.484" cy="9" rx="1.032" ry="1" />
              <ellipse id="Oval" cx="19.613" cy="5" rx="1.032" ry="1" />
              <ellipse id="Oval" cx="23.742" cy="9" rx="1.032" ry="1" />
              <ellipse id="Oval" cx="12.387" cy="5" rx="1.032" ry="1" />
              <path
                d="M32,14.2939453 C31.998237,13.5916023 31.6460742,12.939035 31.0666667,12.5644531 C30.3066667,8.32617188 27.36,0 16,0 C4.78666667,0 1.77333333,8.24414062 0.966666667,12.5439453 C0.368457477,12.914097 0.00199528801,13.5775199 0,14.2939453 L0,16.3447266 C0.37012281,16.9756444 0.37012281,17.76459 0,18.3955078 L0,20.4462891 C0.000916934678,21.1524062 0.356040496,21.8083754 0.94,22.1826172 C1.3586532,24.2045247 2.60097851,25.9461421 4.35333333,26.9677734 C5.4709278,27.605844 6.72144516,27.9598158 8,28 L23.3333333,28 C27.5933333,28 29.8,25.0195312 30.76,22.3740234 C31.5090869,22.0584736 31.9986608,21.3108648 32,20.4804687 L32,18.4296875 C31.6298772,17.7987697 31.6298772,17.0098241 32,16.3789063 L32,14.2939453 Z M16.6666667,14.2939453 L27.3333333,14.2939453 L23.3333333,18.3955078 L16.6666667,14.2939453 Z M28.6666667,15.6611328 C29.0159034,15.2830682 29.247913,14.8072673 29.3333333,14.2939453 L29.3333333,14.9775391 L29.3333333,16.3447266 L28,16.3447266 L28.6666667,15.6611328 Z M15.6266667,16.0507813 L16.1,16.3447266 L2.66666667,16.3447266 L2.66666667,14.9775391 C2.66666667,14.9775391 2.66666667,14.7246094 2.7,14.2939453 L14.66,14.2939453 C14.6596635,15.0128075 15.0264268,15.6793692 15.6266667,16.0507813 L15.6266667,16.0507813 Z M2.66666667,18.3955078 C2.74127948,18.9123895 2.97483483,19.3913605 3.33333333,19.7626953 L4,20.4462891 L2.66666667,20.4462891 C2.65333333,20.2207031 2.66666667,18.7578125 2.66666667,18.3955078 Z M4.66666667,18.3955078 L14,18.3955078 L8.66666667,22.5449219 L4.66666667,18.3955078 Z M15.2333333,20.0292969 C15.7300522,19.6406052 16.021068,19.0362089 16.02,18.3955078 L19.4533333,18.3955078 L22.32,20.1523438 C23.1060411,20.6349726 24.1113869,20.5082261 24.76,19.8447266 L26.1733333,18.3955078 L29.3466667,18.3955078 L29.3466667,19.7626953 C29.3466667,19.7626953 29.3466667,20.0292969 29.22,20.4462891 L14.6866667,20.4462891 L15.2333333,20.0292969 Z M16,1.98925781 C25.3933333,1.98925781 28.1666667,8.43554688 28.9866667,12.2431641 L3,12.2431641 C3.83333333,8.43554688 6.60666667,1.98925781 16,1.98925781 Z M23.3333333,25.9150391 L8,25.9150391 C8,25.9150391 4.40666667,25.9150391 3.12,22.4970703 L5.82666667,22.4970703 L7.28666667,23.9941406 C7.99370141,24.7212432 9.11617635,24.8001171 9.91333333,24.1787109 L12,22.5039063 L28.6666667,22.5039063 C27.7012647,24.6206319 25.6118656,25.9569852 23.3333333,25.9150391 L23.3333333,25.9150391 Z"
                id="Shape"
              />
            </g>
          </g>
        </g>
      </g>
    </Hamburger>
  );
}
